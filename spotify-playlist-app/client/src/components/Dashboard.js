// src/components/Dashboard.js
import React, { useState } from 'react';
import axios from 'axios';
import styled from 'styled-components';
import { useAuth } from '../context/AuthContext';
import { useSearch } from '../context/SearchContext';
import SearchResults from '../components/SearchResults';
import Playlist from '../components/Playlist';


const Dashboard = () => {
  const { userData } = useAuth();
  const { searchResults } = useSearch();
  const [playlist, setPlaylist] = useState([]);

  const addToPlaylist = (item) => {
    setPlaylist([...playlist, item]);
  };

  // const createPlaylist = async () => {
  //   const accessToken = localStorage.getItem('access_token');
  //   const userId = userData.id;
  //   try {
  //     const createResponse = await axios.post(
  //       `https://api.spotify.com/v1/users/${userId}/playlists`,
  //       {
  //         name: 'New Playlist',
  //         description: 'Generated by Spotify Playlist Generator',
  //         public: false,
  //       },
  //       {
  //         headers: {
  //           Authorization: `Bearer ${accessToken}`,
  //         },
  //       }
  //     );

  //     const playlistId = createResponse.data.id;

  //     await axios.post(
  //       `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,
  //       {
  //         uris: playlist.map(item => item.uri),
  //       },
  //       {
  //         headers: {
  //           Authorization: `Bearer ${accessToken}`,
  //         },
  //       }
  //     );

  //     alert('Playlist created successfully!');
  //   } catch (error) {
  //     console.error('Error creating playlist:', error);
  //   }
  // };

  return (
    <>
      {!userData && !searchResults ? (
        <div>Loading...</div>
      ) : (
        <Display>
            <SearchResults searchResults={searchResults} addToPlaylist={addToPlaylist} />
          {/* <Playlist playlist={playlist} createPlaylist={createPlaylist} /> */}
        </Display>
      )}
    </>
  );
};

export default Dashboard;

const Display = styled.div`
  max-width: 120rem;
  height: 70vh;
  margin: 5rem auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  @media screen and (max-width: 1199px) {
    margin: 5rem 2rem;
  }
  @media screen and (max-width: 768px) {
    margin: 5rem 1rem;
    grid-template-columns: 1fr;
  }
`